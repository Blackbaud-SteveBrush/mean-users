"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="checklist-model"),angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(a,b){function c(a,b,c){if(angular.isArray(a))for(var d=a.length;d--;)if(c(a[d],b))return!0;return!1}function d(a,b,d){return a=angular.isArray(a)?a:[],c(a,b,d)||a.push(b),a}function e(a,b,c){if(angular.isArray(a))for(var d=a.length;d--;)if(c(a[d],b)){a.splice(d,1);break}return a}function f(f,g,h){function i(){t(),u(),v()}function j(){return h.checklistValue?a(h.checklistValue)(f.$parent):h.value}function k(a,b){var c=n(f.$parent);angular.isFunction(n.assign)&&(b===!0?n.assign(f.$parent,d(c,a,r)):n.assign(f.$parent,e(c,a,r)))}function l(a,b){return p&&p(f)===!1?void k(j(),q(f)):void q.assign(f,c(a,j(),r))}var m=h.checklistModel;h.$set("checklistModel",null),b(g)(f),h.$set("checklistModel",m);var n=a(m),o=a(h.checklistChange),p=a(h.checklistBeforeChange),q=a(h.ngModel),r=angular.equals;if(h.hasOwnProperty("checklistComparator"))if("."==h.checklistComparator[0]){var s=h.checklistComparator.substring(1);r=function(a,b){return a[s]===b[s]}}else r=a(h.checklistComparator)(f.$parent);var t=f.$watch(h.ngModel,function(a,b){if(a!==b){if(p&&p(f)===!1)return void q.assign(f,c(n(f.$parent),j(),r));k(j(),a),o&&o(f)}}),u=f.$watch(j,function(a,b){if(a!=b&&angular.isDefined(b)&&f[h.ngModel]===!0){var c=n(f.$parent);n.assign(f.$parent,e(c,b,r)),n.assign(f.$parent,d(c,a,r))}},!0),v=f.$on("$destroy",i);angular.isFunction(f.$parent.$watchCollection)?f.$parent.$watchCollection(m,l):f.$parent.$watch(m,l,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(a,b){if(!b.checklistValue&&!b.value)throw"You should provide `value` or `checklist-value`.";return b.ngModel||b.$set("ngModel","checked"),f}}}]),function(a){"use strict";function b(a,b){b.otherwise("/"),a.state("home",{url:"/",templateUrl:"../public/app/views/home.html",controller:"HomeController as homeCtrl"}).state("login",{url:"/login",templateUrl:"../public/app/views/login.html",controller:"LoginController as loginCtrl"}).state("logout",{url:"/logout",template:"",controller:["$state","$window","AuthService",function(a,b,c){c.logout().then(function(){a.go("login"),b.location.reload()})}]}).state("register",{url:"/register",templateUrl:"../public/app/views/register.html",controller:"RegisterController as registerCtrl"}).state("profile",{url:"/profile",templateUrl:"../public/app/views/profile.html",controller:"ProfileController as profileCtrl",restrictions:{role:"editor"}}).state("admin",{url:"/admin","abstract":!0,template:"<ui-view/>",restrictions:{role:"admin"}}).state("admin.users",{url:"/users",templateUrl:"../public/app/views/admin/users.html",controller:"UsersController as usersCtrl"}).state("admin.roles",{url:"/roles",templateUrl:"../public/app/views/admin/roles.html",controller:"RolesController as rolesCtrl"}).state("admin.permissions",{url:"/permissions",templateUrl:"../public/app/views/admin/permissions.html",controller:"PermissionsController as permissionsCtrl"})}function c(a,b,c){a.$on("$stateChangeStart",function(a,d){c.getUserStatus().then(function(){c.isAuthorized(d.permissions)!==!1&&c.isRole(d.role)!==!1||(a.preventDefault(),b.go("login"))})})}function d(a){var b;b=this,b.isLoggedIn=a.isLoggedIn,b.isAuthorized=a.isAuthorized}b.$inject=["$stateProvider","$urlRouterProvider"],c.$inject=["$rootScope","$state","AuthService"],d.$inject=["AuthService"],a.module("mean-users",["sky","ui.router","mean-users.templates","checklist-model"]).config(b).run(c).controller("AppController",d)}(window.angular),function(a){"use strict";function b(a,b){var c,d,e;c=!1,d=this,e=null,d.getUserStatus=function(){var d;return d=b.defer(),a.get("/api/user-status").then(function(a){c=a.data.status,e=a.data.user,a.data.status===!0?d.resolve():d.reject()})["catch"](function(){c=!1,e=null,d.reject()}),d.promise},d.isLoggedIn=function(){return c},d.isAuthorized=function(a){return console.log("isAuthorized:",e),!0},d.isRole=function(a){var b;switch(a){case"admin":b=!0;break;case"editor":b=d.isLoggedIn();break;default:b=!0}return b},d.login=function(d,e){var f;return f=b.defer(),a.post("/api/login",{emailAddress:d,password:e}).then(function(a){c=!0,f.resolve(a.data)})["catch"](function(a){c=!1,f.reject(a.data)}),f.promise},d.logout=function(){console.log("LOGOUT!!!");var d;return d=b.defer(),a.get("/api/logout").then(function(a){c=!1,d.resolve(a.data)})["catch"](function(a){c=!0,d.reject(a.data)}),d.promise},d.register=function(b){return a.post("/api/register",b).then(function(a){return a.data})}}b.$inject=["$http","$q"],a.module("mean-users").service("AuthService",b)}(window.angular),function(a){"use strict";function b(a){var b;b=this,b.getAll=function(){return a.get("/api/permissions/").then(function(a){return a.data})},b.create=function(b){return a.post("/api/permissions/",b).then(function(a){return a.data})},b.deleteById=function(b){return a["delete"]("/api/permissions/"+b).then(function(a){return a.data})},b.updateById=function(b,c){return a.put("/api/permissions/"+b,c).then(function(a){return a.data})}}b.$inject=["$http"],a.module("mean-users").service("PermissionService",b)}(window.angular),function(a){"use strict";function b(a){var b;b=this,b.getAll=function(){return a.get("/api/roles/").then(function(a){return a.data})},b.create=function(b){return a.post("/api/roles/",b).then(function(a){return a.data})},b.deleteById=function(b){return a["delete"]("/api/roles/"+b).then(function(a){return a.data})},b.updateById=function(b,c){return a.put("/api/roles/"+b,c).then(function(a){return a.data})}}b.$inject=["$http"],a.module("mean-users").service("RoleService",b)}(window.angular),function(a){"use strict";function b(a){var b;b=this,b.create=function(b){return a.post("/api/users",b).then(function(a){return a.data})},b.deleteById=function(b){return a["delete"]("/api/users/"+b).then(function(a){return a.data})},b.getAll=function(){return a.get("/api/users").then(function(a){return a.data})},b.getById=function(b){return a.get("/api/users/"+b).then(function(a){return a.data})},b.updateById=function(b,c){return a.put("/api/users/"+b,c).then(function(a){return a.data})}}b.$inject=["$http"],a.module("mean-users").service("UserService",b)}(window.angular),function(a){"use strict";function b(a){var b;b=this,b.formData={},a.getAll().then(function(a){b.permissions=a.value}),b.submit=function(){a.create(b.formData).then(function(a){b.permissions.unshift(a),b.formData={}})},b["delete"]=function(c){a.deleteById(b.permissions[c]._id).then(function(){b.permissions.splice(c,1)})},b.update=function(b){delete b.showEditor,a.updateById(b._id,b).then(function(a){b=a})}}b.$inject=["PermissionService"],a.module("mean-users").controller("PermissionsController",b)}(window.angular),function(a){"use strict";function b(a,b){var c;c=this,c.formData={},a.getAll().then(function(a){c.permissions=a.value,b.getAll().then(function(a){c.roles=a.value})}),c.submit=function(){b.create(c.formData).then(function(a){c.roles.unshift(a),c.formData={}})},c["delete"]=function(a){b.deleteById(c.roles[a]._id).then(function(){c.roles.splice(a,1)})},c.update=function(a){delete a.showEditor,b.updateById(a._id,a).then(function(b){a=b})},c.toggleSelection=function(a){c.roles.forEach(function(b){var c=b.permissions.indexOf(a);c>-1?b.permissions.splice(c,1):b.permissions.push(a)})}}b.$inject=["PermissionService","RoleService"],a.module("mean-users").controller("RolesController",b)}(window.angular),function(a){"use strict";function b(a){var b;b=this,b.sortType="emailAddress",b.reverseSort=!1,b.sortBy=function(a){b.sortType===a&&b.toggleReverse(),b.sortType=a},b.toggleReverse=function(){b.reverseSort?b.reverseSort=!1:b.reverseSort=!0},a.getAll().then(function(a){b.users=a.value,b.isReady=!0})}b.$inject=["UserService"],a.module("mean-users").controller("UsersController",b)}(window.angular),function(a){"use strict";function b(){}a.module("mean-users").controller("HomeController",b)}(window.angular),function(a){"use strict";function b(a,b,c){var d;d=this,d.formData={},this.submit=function(){d.disabled=!0,c.login(d.formData.emailAddress,d.formData.password).then(function(){a.go("home"),b.location.reload(),d.disabled=!1})["catch"](function(a){alert("ERROR!",a),d.disabled=!1})}}b.$inject=["$state","$window","AuthService"],a.module("mean-users").controller("LoginController",b)}(window.angular),function(a){"use strict";function b(){}a.module("mean-users").controller("ProfileController",b)}(window.angular),function(a){"use strict";function b(a,b){var c;c=this,c.formData={},c.submit=function(){c.disabled=!0,b.register(c.formData).then(function(){a.go("login"),c.disabled=!1})["catch"](function(){alert("Error!"),c.formData={},c.disabled=!1})}}b.$inject=["$state","AuthService"],a.module("mean-users").controller("RegisterController",b)}(window.angular),angular.module("mean-users.templates",[]).run(["$templateCache",function(a){a.put("../public/app/views/admin/permissions.html",'<h1>Permissions</h1><table class="table table-striped"><tr><td><form class="form form-inline" ng-submit=permissionsCtrl.submit()><div class=form-group><input class=form-control id=field-permission placeholder=MY_PERMISSION ng-model=permissionsCtrl.formData.name> <button type=submit class="btn btn-default">Create</button></div></form></td><td></td><td></td></tr><tr><th>Name</th><th>ID</th><th></th></tr><tr ng-repeat="permission in permissionsCtrl.permissions"><td><form ng-if=permission.showEditor ng-submit=permissionsCtrl.update(permission)><div class=form-group><input ng-model=permission.name class=form-control></div><button type=submit class="btn btn-primary btn-xs">Update</button> <button type=button class="btn btn-default btn-xs" ng-click="permission.showEditor=false">Cancel</button></form><span ng-if=!permission.showEditor ng-click="permission.showEditor=true" ng-bind=permission.name></span></td><td ng-bind=permission._id></td><td><button class="btn btn-xs btn-default" ng-click=permissionsCtrl.delete($index)>Delete</button></td></tr></table>'),a.put("../public/app/views/admin/roles.html",'<h1>Roles</h1><table class="table table-striped"><tr><td><form class="form form-inline" ng-submit=rolesCtrl.submit()><div class=form-group><input class=form-control id=field-role placeholder="e.g. admin" ng-model=rolesCtrl.formData.name> <button type=submit class="btn btn-default">Create</button></div></form></td><td></td><td></td></tr><tr><th>Name</th><th>Permissions</th><th></th></tr><tr ng-repeat="role in rolesCtrl.roles"><td><form ng-if=role.showEditor ng-submit=rolesCtrl.update(role)><div class=form-group><input ng-model=role.name class=form-control></div><button type=submit class="btn btn-primary btn-xs">Update</button> <button type=button class="btn btn-default btn-xs" ng-click="role.showEditor=false">Cancel</button></form><span ng-if=!role.showEditor ng-click="role.showEditor=true" ng-bind=role.name></span></td><td><form ng-submit=rolesCtrl.update(role)><div class=checkbox ng-repeat="permission in rolesCtrl.permissions"><label><input type=checkbox ng-checked="role.permissions.indexOf(permission._id) > -1" ng-click=rolesCtrl.toggleSelection(permission._id)><span ng-bind=permission.name></span></label></div><div class=form-group><button type=submit class="btn btn-xs btn-default">Update</button></div></form></td><td><button class="btn btn-xs btn-default" ng-click=rolesCtrl.delete($index)>Delete</button></td></tr></table>'),a.put("../public/app/views/admin/users.html",'<h1>Users</h1><div class=table-responsive><table class="table table-striped"><tr><td><form class="form form-inline" ng-submit=usersCtrl.submit()><div class=form-group><input type=email class=form-control placeholder="Email address" ng-model=usersCtrl.formData.emailAddress></div><div class=form-group><select class=form-control><option value="">-- Role --</option></select></div><button type=submit class="btn btn-default">Create</button></form></td><td></td><td></td></tr><tr><th class=form-sort-tab ng-click="usersCtrl.sortBy(\'emailAddress\')" ng-class="{\'active\':usersCtrl.sortType === \'emailAddress\'}">Email Address <span class=carrots ng-if="usersCtrl.sortType === \'emailAddress\'"><i class="fa fa-caret-up fa-3" ng-if=!usersCtrl.reverseSort aria-hidden=true></i> <i class="fa fa-caret-down fa-4" ng-if=usersCtrl.reverseSort aria-hidden=true></i></span></th><th class=form-sort-tab ng-click="usersCtrl.sortBy(\'role\')" ng-class="{\'active\':usersCtrl.sortType === \'role\'}">Role <span class=carrots ng-if="usersCtrl.sortType === \'role\'"><i class="fa fa-caret-up fa-5" ng-if=!usersCtrl.reverseSort aria-hidden=true></i> <i class="fa fa-caret-down fa-6" ng-if=usersCtrl.reverseSort aria-hidden=true></i></span></th><th></th></tr><tr ng-repeat="user in usersCtrl.users | orderBy:usersCtrl.sortType:usersCtrl.reverseSort"><td><span ng-bind=::user.emailAddress></span></td><td><span ng-bind=::user.roleId></span></td><td><a ui-sref="user-form({ id: user._id })" class="btn btn-default"><i class="fa fa-pencil"></i> Edit</a></td></tr></table></div>'),a.put("../public/app/views/home.html","Home"),a.put("../public/app/views/login.html",'<h1>Log in</h1><form class=form ng-submit=loginCtrl.submit()><div class=form-group><label for=field-email-address>Email address</label><input type=email class=form-control id=field-email-address ng-model=loginCtrl.formData.emailAddress></div><div class=form-group><label for=field-password>Password</label><input type=password class=form-control id=field-password ng-model=loginCtrl.formData.password></div><div class=form-group><button type=submit class="btn btn-primary" ng-disabled=loginCtrl.disabled>Log in</button></div></form>'),a.put("../public/app/views/profile.html","Profile"),a.put("../public/app/views/register.html",'<h1>Register</h1><form class=form ng-submit=registerCtrl.submit()><div class=form-group><label for=field-email-address>Email address</label><input type=email class=form-control id=field-email-address ng-model=registerCtrl.formData.emailAddress></div><div class=form-group><label for=field-password>Password</label><input type=password class=form-control id=field-password ng-model=registerCtrl.formData.password></div><div class=form-group><button type=submit class="btn btn-primary" ng-disabled=registerCtrl.disabled>Register</button></div></form>')}]);
//# sourceMappingURL=app.min.js.map